{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b4d6a7d.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from 'react'\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const { target: { name, value }, } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        };\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let data;\n        try {\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n         <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>   \n        </>\n    )\n}\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";import { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\nconst onSocialClick = async (event) => {\n        const { target: { name }, } = event;\n        let provider;\n\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n            size=\"3x\"\n            style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import React, { useState } from 'react'\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure to delete?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text:newNweet\n        });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;   \n        setNewNweet(value);\n    }\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your nweet\"\n                            onChange={onChange}\n                            value={newNweet}\n                            autoFocus\n                            required \n                            className=\"formInput\"\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Update Nweet\"\n                            className=\"formBtn\" \n                        />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n                ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                    {isOwner && (\n                        <div class=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","import React, { useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile)\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                        backgroundImage: attachment,\n                        }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n                )}\n        </form>\n    )\n}\n\nexport default NweetFactory;\n","import React, { useState, useEffect } from 'react'\nimport { dbService } from 'fbase';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n    return (\n    <div className=\"container\">\n        <NweetFactory userObj={userObj} />    \n        <div style={{ marginTop: 30 }}>\n            {nweets.map((nweet) =>\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n            )}    \n        </div>\n    </div>\n    );\n};\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { authService, dbService } from 'fbase';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom';\n\nconst Profile = ({ refreshUser, userObj }) => {\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyNweets = async () => {\n        await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\n    };\n    useEffect(() => {\n        getMyNweets();\n    }, [])\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            })\n            refreshUser();\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"Display Name\" \n                value={newDisplayName}\n                autoFocus    \n                className=\"formInput\"\n                />    \n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>      \n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/profile\" style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n            }}\n            >\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                <span style={{ marginTop: 10 }}>\n                    {userObj.displayName\n                    ? `${userObj.displayName}의 Profile`\n                    : \"Profile\"}\n                </span>\n            </Link>\n        </li>\n    </ul>\n</nav>;\n\nexport default Navigation;","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />   \n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile refreshUser={refreshUser} userObj={userObj} />   \n                        </Route>\n                    </div>\n                    ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    </>)\n                }\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react'\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}